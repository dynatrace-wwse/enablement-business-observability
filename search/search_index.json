{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"1. About","text":""},{"location":"#enablement-business-observability","title":"Enablement Business Observability","text":"<p>Support Policy</p> <p>This is an enablement project created by the Center of Excellence - Enablement Team at Dynatrace.</p> <p>Support is provided via GitHub issues only. The materials provided in this repository are offered \"as-is\" without any warranties, express or implied. Use them at your own risk.</p> <p>View the Code</p> <p>The code for this repository is hosted on GitHub. Click the \"View Code on GitHub\" link above.</p>"},{"location":"#lab-overview","title":"Lab Overview","text":"<p>During this hands-on training, we'll explore Business Observability powered by BizEvents. During this session we configure business events using OneAgent, Logs and API data sources in context of a single process flow. Additionally, we will use OpenPipeline to generate and enrich telemetry signals. Using the data generated, we'll run powerful analytics with Business Flows, Notebooks, and Dashboards.</p> <p>The Astroshop <code>Order to Shipped</code> Business Process will be the target use case:</p> <p><pre><code>Steps:\n\nStep 1: Place Order\nStep 2: Fraud Check\nStep 3: Order Shipped\n\nCorrelation Id:\n\norderId\n</code></pre> </p> <p>The training will start with:</p> <ol> <li>Dynatrace Tenant Setup</li> <li>Environment Setup using Github Codespaces</li> </ol> <p>Then we will move to the hands on lab tasks:</p> <ol> <li>Business Event Capture via the Dynatrace OneAgent - Place Order</li> <li>Business Event Capture via Dynatrace ingested logs - Fraud Check</li> <li>Business Event Capture via the events sent to the Dynatrace Business Events API - Order Shipped</li> <li>Create a Metric from Business Events - Place Order</li> <li>Create an Alert from Business Events - Place Order</li> <li>Create a Business Flow and an Alert - Order to Shipped business process</li> <li>Import and review sample Dashboards </li> </ol>"},{"location":"#continue","title":"Continue","text":"<p>In the next section, we'll review the prerequisites for this lab needed before launching our Codespaces instance.</p> <ul> <li>Continue to getting started</li> </ul>"},{"location":"04_bizevents_oneagent/","title":"4. Business Events via OneAgent","text":""},{"location":"04_bizevents_oneagent/#business-events-capture-oneagent","title":"Business Events Capture - OneAgent","text":"<p>Using the Dynatrace OneAgent to capture Business Events provides real-time business observability, enabling data-driven decision-making and improved business outcomes by offering precise metrics and context, lossless access to data, and the ability to explore large datasets without pre-indexing.</p> <ul> <li> <p>Recommended approach for capturing Business Events when applicable</p> </li> <li> <p>Uses deep payload inspection extracts business data from in-flight application requests and responses</p> </li> <li> <p>Configuration is simple and doesn\u2019t require code changes</p> </li> <li> <p>Automatically enriches business events with context, including host, process group, and trace information, which helps in analyzing anomalies and fostering collaboration</p> </li> </ul> <p>Get business events via OneAgent documentation</p> <p>This lab will utilize the Dynatrace OneAgent to capture business events for the <code>Place Order</code> step of the Astroshop <code>Order to Shipped</code> business process.</p> <ul> <li>Configure a capture rule, triggers and data fields to be extracted</li> <li>Use OpenPipeline to extract and remove fields</li> <li>Validate Business Event data with a Notebook</li> </ul> <p></p> <p></p>"},{"location":"04_bizevents_oneagent/#place-order","title":"Place Order","text":"<p>In this section of the lab we will configure a Business Event capture rule for <code>Place Order</code> step of the <code>Order to Shipped</code> business process.</p>"},{"location":"04_bizevents_oneagent/#business-event-source-settings","title":"Business Event - Source Settings","text":"<p>Go to Settings Classic &gt; Business Analytics &gt; OneAgent Business Event Sources.</p> <p>Select the Incoming tab.</p> <p></p>"},{"location":"04_bizevents_oneagent/#business-event-capture-rule","title":"Business Event - Capture Rule","text":"<p>Select the Add new capture rule button and name your rule using the following name: </p> <pre><code>astroshop_placeorder_success\n</code></pre> <p></p>"},{"location":"04_bizevents_oneagent/#business-event-triggers","title":"Business Event - Triggers","text":"<p>To capture Business Events from incoming web requests, we need to define conditions which are called Triggers.  Triggers are connected by AND logic per capture rule. If you set multiple trigger rules, all of them need to be fulfilled to capture a business event.</p> <p>We will use 3 triggers:</p> <p>Trigger 1</p> <p>Select the Add trigger button.</p> <p>In the <code>Data source</code> drop down list select:  </p> <pre><code>Request - Path\n</code></pre> <p>In the <code>Operator</code> drop down list select: </p> <pre><code>equals\n</code></pre> <p>In the <code>Value</code> field use: </p> <pre><code>/api/checkout\n</code></pre> <p></p> <p>Trigger 2</p> <p>Select the Add trigger button.</p> <p>In the <code>Data source</code> drop down list select:  </p> <pre><code>Response - Body\n</code></pre> <p>In the <code>Path</code> field use: </p> <pre><code>*\n</code></pre> <p>In the <code>Operator</code> drop down list select: </p> <pre><code>contains\n</code></pre> <p>In the <code>value</code> field use:  </p> <pre><code>orderId\n</code></pre> <p></p> <p>Trigger 3</p> <p>Select the Add trigger button.</p> <p>In the <code>Data source</code> drop down list select:  </p> <pre><code>Response - HTTP Status Code\n</code></pre> <p>In the <code>Operator</code> drop down list select: </p> <pre><code>equals\n</code></pre> <p>In the <code>Value</code> field use: </p> <pre><code>200\n</code></pre> <p></p>"},{"location":"04_bizevents_oneagent/#business-event-event-provider","title":"Business Event - Event Provider","text":"<p>The <code>Event Provider</code> is the source of the event, for example, the name of the component or system that generated the event.</p> <p>Under Event meta data, for the Event provider section use the following:</p> <p>In the <code>Data source</code> drop down list select:</p> <pre><code>Fixed value\n</code></pre> <p>In the <code>Fixed value</code> section use:</p> <pre><code>astroshop\n</code></pre> <p></p>"},{"location":"04_bizevents_oneagent/#business-event-event-type","title":"Business Event - Event Type","text":"<p>The Event Type is the unique identifier of a given event.</p> <p>Under Event meta data, for the Event type section use the following:</p> <p>In the <code>Data source</code> drop down list select:</p> <pre><code>Fixed value\n</code></pre> <p>In the <code>Fixed value</code> section use:</p> <pre><code>astroshop.placeorder.success\n</code></pre> <p></p>"},{"location":"04_bizevents_oneagent/#business-event-event-category","title":"Business Event - Event Category","text":"<p>The <code>Event Category</code> is optional.  </p> <p>For this lab we will leave the default value which should be empty.</p>"},{"location":"04_bizevents_oneagent/#business-event-event-meta-data","title":"Business Event - Event Meta Data","text":"<p>The steps so far conclude the configuration of a business event that will be generated each time the trigger criteria is matched. This might be sufficient if all you need is to answer the question of how many <code>astroshop_placeorder_success</code> events were called. </p> <p>In most cases you will want to add event attributes to provide granular insight. <code>Attributes</code> are data fields extracted from the event <code>JSON</code> or <code>XML</code> payload.</p> <p>Below is sample response payload for the <code>Place Order</code> transaction.  The following steps will cover how to extract the <code>orderId</code> and <code>units</code> (units will be used for the revenue number) and more from the response payload.  </p> <p>Capturing the <code>orderId</code> is critical for this business process as it will be unique identifier (correlation ID) that is common to all of the process steps.</p> <p>Note: Use must use exact letter casing for fields that you define for data extraction. </p> <pre><code>{\n    \"orderId\": \"09766d7d-0530-11f0-895b-0e326b3139ca\",\n    \"shippingTrackingId\": \"c51af8bd-3fe1-4a46-9d9b-45a16cd7cd66\",\n    \"shippingCost\": {\n        \"currencyCode\": \"USD\",\n        \"units\": 47,\n        \"nanos\": 700000000\n    },\n    \"shippingAddress\": {\n        \"streetAddress\": \"1600 Amphitheatre Parkway\",\n        \"city\": \"Mountain View\",\n        \"state\": \"CA\",\n        \"country\": \"United States\",\n        \"zipCode\": \"94043\"\n    },\n    \"items\": [\n        {\n            \"cost\": {\n                \"currencyCode\": \"USD\",\n                \"units\": 349,\n                \"nanos\": 949999999\n            },\n            \"item\": {\n                \"productId\": \"66VCHSJNUP\",\n                \"quantity\": 1,\n                \"product\": {\n                    \"id\": \"66VCHSJNUP\",\n                    \"name\": \"Starsense Explorer Refractor Telescope\",\n                    \"description\": \"The first telescope that uses your smartphone to analyze the night sky and calculate its position in real time. StarSense Explorer is ideal for beginners thanks to the app\u2019s user-friendly interface and detailed tutorials. It\u2019s like having your own personal tour guide of the night sky\",\n                    \"picture\": \"StarsenseExplorer.jpg\",\n                    \"priceUsd\": {\n                        \"currencyCode\": \"USD\",\n                        \"units\": 349,\n                        \"nanos\": 950000000\n                    },\n                    \"categories\": [\n                        \"telescopes\"\n                    ]\n                }\n            }\n        }\n    ]\n}\n</code></pre> <p>Below is sample request payload for the <code>Place Order</code> transaction.  The following steps will cover how to extract the <code>userId</code> from the response payload. </p> <p>Note: Use must use exact letter casing for fields that you define for data extraction.</p> <pre><code>{\n        \"userId\": \"2e31768f-dc87-4a74-b70f-5972ecca30b1\",\n        \"email\": \"mark@example.com\",\n        \"address\": {\n          \"streetAddress\": \"1 Hacker Way\",\n          \"state\": \"CA\",\n          \"country\": \"United States\",\n          \"city\": \"Menlo Park\",\n          \"zipCode\": \"94025\"\n        },\n        \"userCurrency\": \"USD\",\n        \"creditCard\": {\n          \"creditCardCvv\": \"***\",\n          \"creditCardExpirationMonth\": \"*\",\n          \"creditCardExpirationYear\": \"****\",\n          \"creditCardNumber\": \"****-****-****-****\"\n        }\n}\n</code></pre> <p>The following table shows additional examples of how to extract data from JSON payloads.</p> <p></p> <p>Dynatrace Documentation Link</p>"},{"location":"04_bizevents_oneagent/#business-event-orderid-capture","title":"Business Event - orderId Capture","text":"<p>Under the Event data section, select the Add data field button.</p> <p>In the <code>Field name</code> section use: </p> <pre><code>orderId\n</code></pre> <p>In the <code>Data Source</code> drop down list select:</p> <pre><code>Response - Body\n</code></pre> <p>In the <code>Path</code> section use:</p> <pre><code>orderId\n</code></pre> <p></p>"},{"location":"04_bizevents_oneagent/#business-event-country-capture","title":"Business Event - country Capture","text":"<p>Under the Event data section, select the Add data field button.</p> <p>In the <code>Field name</code> section use: </p> <pre><code>country\n</code></pre> <p>In the <code>Data Source</code> drop down list select:</p> <pre><code>Response - Body\n</code></pre> <p>In the <code>Path</code> section use:</p> <pre><code>shippingAddress.country\n</code></pre> <p></p>"},{"location":"04_bizevents_oneagent/#business-event-userid-capture","title":"Business Event - userId Capture","text":"<p>Under the Event data section, select the Add data field button.</p> <p>In the <code>Field name</code> section use: </p> <pre><code>userId\n</code></pre> <p>In the <code>Data Source</code> drop down list select:</p> <pre><code>Request - Body\n</code></pre> <p>In the <code>Path</code> section use:</p> <pre><code>userId\n</code></pre> <p></p>"},{"location":"04_bizevents_oneagent/#business-event-revenue-capture","title":"Business Event - revenue Capture","text":"<p>Under the Event data section, select the Add data field button.</p> <p>In the <code>Field name</code> section use: </p> <pre><code>revenue\n</code></pre> <p>In the <code>Data Source</code> drop down list select:</p> <pre><code>Response - Body\n</code></pre> <p>In the <code>Path</code> section use:</p> <pre><code>items.0.cost.units\n</code></pre> <p></p>"},{"location":"04_bizevents_oneagent/#business-event-shippingtrackingid-capture","title":"Business Event - shippingTrackingId Capture","text":"<p>Under the Event data section, select the Add data field button.</p> <p>In the <code>Field name</code> section use: </p> <pre><code>shippingTrackingId\n</code></pre> <p>In the <code>Data Source</code> drop down list select:</p> <pre><code>Response - Body\n</code></pre> <p>In the <code>Path</code> section use:</p> <pre><code>shippingTrackingId\n</code></pre> <p></p>"},{"location":"04_bizevents_oneagent/#business-event-full-response-body-capture","title":"Business Event - Full Response Body Capture","text":"<p>Under the Event data section, select the Add data field button.</p> <p>In the <code>Field name</code> section use: </p> <pre><code>ResBody\n</code></pre> <p>In the <code>Data Source</code> drop down list select:</p> <pre><code>Response - Body\n</code></pre> <p>In the <code>Path</code> section use:</p> <pre><code>*\n</code></pre> <p></p> <p><code>Note:</code> Some use cases might require capturing and store the full response body.  OpenPipeline can be used for Business Events to extract needed fields, masking.   You can also drop the full response body field keeping only what extract.  </p> <p>This approach is also helpful for data validation/debugging during initial setup but not using when you fully deploy.  Lastly, using * for the path field value will capture everything. For this lab will use the full response body.</p>"},{"location":"04_bizevents_oneagent/#business-event-save-rule","title":"Business Event - Save Rule","text":"<p>Click the Save changes button.</p> <p></p>"},{"location":"04_bizevents_oneagent/#query-business-events-in-dynatrace","title":"Query Business Events in Dynatrace","text":"<p>Provided Notebook</p> <p><code>Astroshop_SE_Training_Business_Observability_Notebook</code></p> <p>Import the Notebook using the source file Astroshop_SE_Training_Business_Observability_Notebook by downloading to your local system and upload to the Notebooks app. This can be during the labs exercises.</p> <p></p> <p>Or, using your own Notebook execute the below DQL query which retrieves the business events for <code>astroshop.placeorder.success</code> step.</p> <p>DQL: <pre><code>fetch bizevents\n| filter event.provider == \"astroshop\" and event.type == \"astroshop.placeorder.success\"\n| fields timestamp, event.provider, event.type, userId, orderId, revenue, country,trace_id,ResBody\n| sort timestamp desc\n</code></pre></p> <p>Result:</p> <p></p> <p>Notice we have null values for <code>orderId</code>, <code>revenue</code>, <code>country</code> fields.   </p> <p>When reviewing the Response Payload, there are multiple references for the string '\\u0019'. This is a unicode string that denotes End Of Medium.  JSON parsing from the OneAgent capture won't work for this use case.   </p> <p></p> <p>This would be probably rare in your most environments.  Don't worry, for this lab we can fix capturing  <code>orderId</code>, <code>revenue</code>, <code>country</code> fields using a OpenPipeline rule.</p>"},{"location":"04_bizevents_oneagent/#conclusion","title":"Conclusion","text":"<p>We have completed the Business Event capture using the OneAgent for <code>Place Order Success</code> step of the <code>Order to Shipped</code> business process.  The next section will cover using OpenPipeline to replace the null fields with correct data.</p>"},{"location":"04_bizevents_oneagent/#openpipeline","title":"OpenPipeline","text":"<p>In this section of the lab we will use OpenPipeline to replace the  <code>orderId</code>, <code>revenue</code>, <code>country</code> fields values when they are null. Using OpenPipeline, the <code>ResBdy</code> field will be used to extract the correct values needed for the <code>Place Order</code> Business Event.</p>"},{"location":"04_bizevents_oneagent/#business-events-openpipeline-place-order","title":"Business Events - OpenPipeline - Place Order","text":"<p>Launch the OpenPipeline app.</p> <p>Select <code>Business events</code> in the OpenPipeline tree.</p> <p>Select <code>Pipelines</code> tab.</p> <p>Select the <code>+ Pipeline</code> button.</p> <p></p>"},{"location":"04_bizevents_oneagent/#business-events-openpipeline-processing-place-order","title":"Business Events - OpenPipeline - Processing - Place Order","text":"<p>Name your OpenPipeline rule using the following name: </p> <pre><code>Astroshop\n</code></pre> <p>Select the <code>Processing</code> tab.</p> <p>Select the <code>+ Processor</code> button (left side of the screen), then select <code>DQL</code>.</p> <p></p> <p>Fill out the fields with the following data:</p> <p>Name: </p> <pre><code>FixFieldsWithNullValues\n</code></pre> <p>Matching condition: </p> <pre><code>event.type == \"astroshop.placeorder.success\" and isNull(orderId)\n</code></pre> <p>DQL processor definition: </p> <pre><code>parse ResBody, \"\"\"DATA 'orderId\":' DQS:orderId LD 'shippingTrackingId\":' DQS:shippingTrackingId LD 'units\":' DOUBLE:revenue LD  LD 'country\":' DQS:country\"\"\"\n</code></pre> <p>Sample data:</p> <pre><code>     {\n           \"timestamp\": \"2025-03-26T23:39:04.840000000-04:00\",\n           \"event.provider\": \"astroshop\",\n           \"event.type\": \"astroshop.placeorder.success\",\n           \"userId\": \"ae844c70-5b7e-471f-9cfb-07715a46bc8d\",\n           \"orderId\": null,\n           \"revenue\": null,\n           \"country\": null,\n           \"trace_id\": \"104a1ee54db91be0ff9acbcb65cdfee4\",\n           \"ResBody\": \"{\\\"orderId\\\":\\\"07fa8ff2-0abd-11f0-92d2-0e1e3ab12988\\\",\\\"shippingTrackingId\\\":\\\"6fd4c157-ca6b-465e-bc39-a5096d6ee08c\\\",\\\"shippingCost\\\":{\\\"currencyCode\\\":\\\"USD\\\",\\\"units\\\":84,\\\"nanos\\\":400000000},\\\"shippingAddress\\\":{\\\"streetAddress\\\":\\\"1 Hacker Way\\\",\\\"city\\\":\\\"Menlo Park\\\",\\\"state\\\":\\\"CA\\\",\\\"country\\\":\\\"United States\\\",\\\"zipCode\\\":\\\"94025\\\"},\\\"items\\\":[{\\\"cost\\\":{\\\"currencyCode\\\":\\\"USD\\\",\\\"units\\\":209,\\\"nanos\\\":949999999},\\\"item\\\":{\\\"productId\\\":\\\"2ZYFJ3GM2N\\\",\\\"quantity\\\":2,\\\"product\\\":{\\\"id\\\":\\\"2ZYFJ3GM2N\\\",\\\"name\\\":\\\"Roof Binoculars\\\",\\\"description\\\":\\\"This versatile, all-around binocular is a great choice for the trail, the stadium, the arena, or just about anywhere you want a close-up view of the action without sacrificing brightness or detail. It\\u0019s an especially great companion for nature observation and bird watching, with ED glass that helps you spot the subtlest field markings and a close focus of just 6.5 feet.\\\",\\\"picture\\\":\\\"RoofBinoculars.jpg\\\",\\\"priceUsd\\\":{\\\"currencyCode\\\":\\\"USD\\\",\\\"units\\\":209,\\\"nanos\\\":950000000},\\\"categories\\\":[\\\"binoculars\\\"]}}}]}\"\n         }\n</code></pre> <p>Select the <code>Run sample data</code> button.</p> <p>Under the <code>Preview result</code> section validate <code>orderId</code>, <code>country</code> and <code>revenue</code> fields have values.</p> <p></p>"},{"location":"04_bizevents_oneagent/#business-events-openpipeline-processing-remove-resbody-field","title":"Business Events - OpenPipeline - Processing - Remove ResBody Field","text":"<p>Select the <code>+ Processor</code> button (left side of the screen), then select <code>Remove fields</code></p> <p></p> <p>Fill out the fields with the following data:</p> <p>Name: </p> <pre><code>RemoveResBody\n</code></pre> <p>Matching condition: </p> <pre><code>event.type == \"astroshop.placeorder.success\"\n</code></pre> <p>Remove fields:</p> <p>After adding the below field to remove, select the Add button.</p> <pre><code>ResBody\n</code></pre> <p>Select the Save Button at the top right of the screen.</p> <p></p>"},{"location":"04_bizevents_oneagent/#business-events-openpipeline-dynamic-route-place-order","title":"Business Events - OpenPipeline Dynamic Route - Place Order","text":"<p>Now we need to create a Dynamic route for the Astroshop Business Events pipeline. Dynamic routes give you the option to route your ingested data into a pipeline with a matching condition.</p> <p>Select <code>Business events</code> in the OpenPipeline tree. </p> <p>Select <code>Dynamic routing</code> tab.</p> <p>Select <code>+ Dynamic route</code> button.</p> <p></p> <p>Configure the Dynamic route with the following:</p> <p>Name:</p> <pre><code>Astroshop_BusinessEvents\n</code></pre> <p>Matching condition:</p> <pre><code>event.provider == \"astroshop\"\n</code></pre> <p>Pipeline:</p> <p>In the dropdown list select the following:</p> <pre><code>Astroshop\n</code></pre> <p>Select the <code>Add</code> button.</p> <p></p> <p>Select the <code>Save</code> button.</p> <p><pre><code>A warning icon with this message will appear \"Do you want to save your changes to this table?\" \n</code></pre> Select the <code>Save</code> button.</p> <p></p>"},{"location":"04_bizevents_oneagent/#conclusion_1","title":"Conclusion","text":"<p>We have completed the Business Event OpenPipeline section for <code>Place Order</code> step of the <code>Order to Shipped</code> business process.  This section covered how to use OpenPipeline to replace the null values  for <code>orderId</code>, <code>revenue</code>, <code>country</code> with the correct values.  The next section will validate the data.</p>"},{"location":"04_bizevents_oneagent/#data-validation","title":"Data Validation","text":"<p>In this section of the lab we will validate the data for the <code>Place Order</code> step of the <code>Order to Shipped</code> business process.</p>"},{"location":"04_bizevents_oneagent/#query-business-events-in-dynatrace_1","title":"Query Business Events in Dynatrace","text":"<p>Using a Notebook execute the below DQL query which retrieves the buisness events for <code>astroshop.placeorder.success</code> step.  </p> <p>DQL: <pre><code>fetch bizevents\n| filter event.provider == \"astroshop\" and event.type == \"astroshop.placeorder.success\"\n| fields timestamp, event.provider, event.type, userId, orderId, revenue, country, shippingTrackingId, trace_id\n| sort timestamp desc\n</code></pre></p> <p>Result:</p> <p></p>"},{"location":"04_bizevents_oneagent/#conclusion_2","title":"Conclusion","text":"<p>We have completed data validation for the <code>Place Order</code> step of the <code>Order to Shipped</code> business process.</p>"},{"location":"04_bizevents_oneagent/#data-validation_1","title":"Data Validation","text":"<p>In this section of the lab we will validate the data for the <code>Place Order</code> step of the <code>Order to Shipped</code> business process.</p>"},{"location":"04_bizevents_oneagent/#query-business-events-in-dynatrace_2","title":"Query Business Events in Dynatrace","text":"<p>Using a Notebook execute the below DQL query which retrieves the buisness events for <code>astroshop.placeorder.success</code> step.  </p> <p>DQL: <pre><code>fetch bizevents\n| filter event.provider == \"astroshop\" and event.type == \"astroshop.placeorder.success\"\n| fields timestamp, event.provider, event.type, userId, orderId, revenue, country, shippingTrackingId, trace_id\n| sort timestamp desc\n</code></pre></p> <p>Result:</p> <p></p>"},{"location":"04_bizevents_oneagent/#conclusion_3","title":"Conclusion","text":"<p>We have completed data validation for the <code>Place Order</code> step of the <code>Order to Shipped</code> business process.</p>"},{"location":"04_bizevents_oneagent/#continue","title":"Continue","text":"<p>In the next section, we'll capture Business Events from Logs using OpenPipeline.</p> <ul> <li>Continue to Business Event Capture with Logs</li> </ul>"},{"location":"05_bizevents_logs/","title":"5. Business Events via Logs","text":""},{"location":"05_bizevents_logs/#business-events-capture-logs","title":"Business Events Capture - Logs","text":"<p>Organizations in today\u2019s data-driven world often struggle with fragmented data sources that hinder comprehensive business insights. With Dynatrace OpenPipeline, you can ingest logs from any system and extract relevant business data to get a cohesive end-to-end view of your business processes.</p> <p>This approach is useful if logs contain business-relevant information or no other ingest path for business events is available.</p> <p>Log to Business events documentation</p> <p>This lab will utilize logs lines ingested by the OneAgent.  The log lines will be converted to business events for the <code>Fraud Check</code> step for the Astroshop <code>Order to Shipped</code> business process.</p> <ul> <li>Use <code>OpenPipeline</code> to convert incoming logs to business events</li> <li>Validate Business Event data with a Notebook</li> </ul> <p></p>"},{"location":"05_bizevents_logs/#fraud-check","title":"Fraud Check","text":"<p>In this section of the lab we will use OpenPipeline to convert incoming logs to business events for the <code>Fraud Detection</code> step of the <code>Order to Shipped</code> business process. </p>"},{"location":"05_bizevents_logs/#logs-fraud-check","title":"Logs - Fraud Check","text":"<p>Using a Notebook execute the below DQL query which retrieves the log lines that will be converted into business events for the <code>Fraud Check</code> step of the <code>Order to Shipped</code> business process.</p> <p>DQL: <pre><code>fetch logs\n| filter k8s.container.name == \"frauddetectionservice\"\n| filter matchesPhrase(content, \"Consumed record with orderId:\")\n| filter matchesPhrase(content, \"orderId\")\n| fields timestamp, content\n| sort timestamp desc\n</code></pre></p> <p>Result:</p> <p></p>"},{"location":"05_bizevents_logs/#logs-fraud-check-orderid-extraction","title":"Logs - Fraud Check orderID Extraction","text":"<p>Using a Notebook execute the below DQL query which retrieves the log lines that will be converted into business events for the <code>Fraud Check</code> step of the <code>Order to Shipped</code> business process.  We will parse the logs lines to extract the orderId. </p> <p>DQL: <pre><code>fetch logs\n| filter k8s.container.name == \"frauddetectionservice\"\n| filter matchesPhrase(content, \"Consumed record with orderId:\")\n| parse content, \"\"\"DATA 'Consumed record with orderId: ' ld:orderId ','\"\"\"\n| fields timestamp, orderId, content\n| sort timestamp desc\n</code></pre> Result:</p> <p></p>"},{"location":"05_bizevents_logs/#business-event-openpipeline-fraud-check","title":"Business Event - OpenPipeline - Fraud Check","text":"<p>Launch the OpenPipeline app.</p> <p>Select Logs in the tree. </p> <p>Select the Pipelines tab.</p> <p>Select the + Pipeline button.</p> <p></p>"},{"location":"05_bizevents_logs/#business-event-openpipeline-processing-fraud-check","title":"Business Event - OpenPipeline Processing - Fraud Check","text":"<p>Name your OpenPipeline rule using the following name: </p> <pre><code>Astroshop_Fraud_Check\n</code></pre> <p>Select the <code>Processing</code> tab</p> <p>Select the <code>+ Processor</code> button (left side of the screen), then select DQL</p> <p></p> <p>Fill out the fields with the following data:</p> <p>Name: </p> <pre><code>FraudCheckBizEventFromLog\n</code></pre> <p>Matching condition: </p> <pre><code>k8s.container.name == \"frauddetectionservice\" AND matchesPhrase(content, \"Consumed record with orderId:\")\n</code></pre> <p>DQL processor definition: </p> <pre><code>parse content, \"\"\"DATA 'Consumed record with orderId: ' ld:orderId ','\"\"\"\n| fieldsAdd add1second = toTimestamp(toLong(timestamp) + 1000000000)\n| fieldsAdd timestamp = add1second\n</code></pre> <p>In the sample data section use the following:</p> <p><pre><code>{\n      \"timestamp\": \"2025-03-19T13:41:16.000000000-04:00\",\n      \"content\": \"2025-03-19 17:41:16 - frauddetectionservice - Consumed record with orderId: 5ba0f19d-04e9-11f0-895b-0e326b3139ca, and updated total count to: 1126 trace_id=6cd0e9c60fd10799c66eb344f916d7e6 span_id=3173a5d07a507a1d trace_flags=01 \",\n      \"k8s.container.name\": \"frauddetectionservice\"\n}\n</code></pre> Select the <code>Run sample data</code> button and Preview the results.  </p> <p>Validate the orderId field exists in the results.</p> <p></p>"},{"location":"05_bizevents_logs/#business-event-openpipeline-data-extraction-fraud-check","title":"Business Event - OpenPipeline Data extraction - Fraud Check","text":"<p>Select the <code>Data extraction</code> tab.</p> <p>Select the <code>+ Processor</code> button (left side of the screen), then select Business event.</p> <p></p> <p>Fill out the fields with the following data:</p> <p>Name:</p> <pre><code>orderId\n</code></pre> <p>Matching condition:</p> <pre><code>k8s.container.name == \"frauddetectionservice\" AND matchesPhrase(content, \"Consumed record with orderId:\") and isNotNull(orderId)\n</code></pre> <p>Event type:</p> <p>Select the Static string radio button and use the following:</p> <pre><code>astroshop.fraudcheck.success\n</code></pre> <p>Event provider:</p> <p>Select the Static string radio button and use the following:</p> <pre><code>astroshop\n</code></pre> <p>Field extraction: </p> <p>Select the Fields to extract radio button.  We will add 3 fields to extract (keep).  The fields need to be added independently.</p> <p>Click the Add button for:</p> <pre><code>timestamp\n</code></pre> <p>Click the Add button for:</p> <p><pre><code>orderId\n</code></pre> Click the Add button for:</p> <pre><code>trace_id\n</code></pre> <p>Select the Save Button at the top right of the screen.</p> <p></p>"},{"location":"05_bizevents_logs/#business-event-openpipeline-dynamic-route-fraud-check","title":"Business Event - OpenPipeline Dynamic Route - Fraud Check","text":"<p>Now we need to create a Dynamic route for the <code>Astroshop_Fraud_Check</code> pipeline. </p> <p>Dynamic routes give you the option to route your ingested data into a pipeline with a matching condition.</p> <p>In the OpenPipeline App, select Logs in the tree.</p> <p>Select the Dynamic routing tab.</p> <p>Select <code>+ Dynamic route</code> button.</p> <p></p> <p>Configure the Dynamic route with the following:</p> <p>Name:</p> <pre><code>Astroshop_Fraud_Check\n</code></pre> <p>Matching condition:</p> <pre><code>k8s.container.name == \"frauddetectionservice\" AND matchesPhrase(content, \"Consumed record with orderId:\")\n</code></pre> <p>Pipeline:</p> <p>In the dropdown list select the following</p> <pre><code>Astroshop_Fraud_Check\n</code></pre> <p>Select Add button.</p> <p></p> <p>Select Save button.</p> <p>A warning icon with this message will appear \"Do you want to save your changes to this table?\" </p> <p>Select the Save button.</p> <p></p>"},{"location":"05_bizevents_logs/#conclusion","title":"Conclusion","text":"<p>We have completed the Business Event capture using log lines and OpenPipeline for <code>Fraud Check</code> step of the <code>Order to Shipped</code> business process.  The next section will validate the data.</p>"},{"location":"05_bizevents_logs/#data-validation","title":"Data Validation","text":"<p>In this section of the lab we will validate the data for the <code>Fraud Check</code> step of the <code>Order to Shipped</code> business process.</p>"},{"location":"05_bizevents_logs/#query-business-events-in-dynatrace","title":"Query Business Events in Dynatrace","text":"<p>Using a Notebook execute the below DQL query which retrieves the business events for <code>astroshop.fraudcheck.success</code> step.  Note, this may take 3-5 minutes for new data to appear.</p> <p>DQL: <pre><code>fetch bizevents\n| filter event.provider == \"astroshop\" and event.type == \"astroshop.fraudcheck.success\"\n| fields timestamp, event.provider, event.type, orderId, trace_id\n| sort timestamp desc\n</code></pre></p> <p>Result:</p> <p></p>"},{"location":"05_bizevents_logs/#conclusion_1","title":"Conclusion","text":"<p>We have completed data validation for the for the <code>Fraud Check</code> step of the <code>Order to Shipped</code> business process.</p>"},{"location":"05_bizevents_logs/#continue","title":"Continue","text":"<p>In the next section, we'll capture Business Events with the Dynatrace API.</p> <ul> <li>Continue to Business Event Capture with API</li> </ul>"},{"location":"06_bizevents_api/","title":"6. Business Events via API","text":""},{"location":"06_bizevents_api/#business-events-capture-api","title":"Business Events Capture - API","text":"<p>Organizations in today\u2019s data-driven world often struggle with fragmented data sources that hinder comprehensive business insights.  Using the Dynatrace Business Event API, external business or IT systems can be used as another data source to send for business event data Dynatrace.</p> <p>This approach is useful when business-relevant information needs to be used and no other ingest path for business events is available.</p> <p>The Dynatrace Business Event API supports JSON, CloudEvents and CloudEvents batch payload formats.  </p> <p>Supported Authentication Types: </p> <ul> <li>Access token</li> <li>OAuth </li> </ul> <p>Ingest business events via API documentation</p> <p>This lab will utilize sending event data to the Business Events API for the <code>Order Shipped</code> step of the Astroshop <code>Order to Shipped</code> business process.</p> <ul> <li>Use a workflow to send <code>Order Shipped</code> business events to the Business Events API </li> <li>Validate the data using a Notebook</li> </ul> <p></p>"},{"location":"06_bizevents_api/#order-shipped","title":"Order Shipped","text":"<p>In this section of the lab we will use a Dynatrace Workflow to send simulated events that represent the <code>Astroshop Shipping</code> system when an Order is Shipped.  These events will leverage the Business Events API for the <code>Order Shipped</code> step of the Astroshop <code>Order to Shipped</code> business process.  </p>"},{"location":"06_bizevents_api/#workflow-order-shipped-download","title":"Workflow - Order Shipped - Download","text":"<p>Download the workflow <code>Astroshop - Order Shipped</code> using the source file Astroshop - Order Shipped to your local system.</p> <p></p>"},{"location":"06_bizevents_api/#workflow-order-shipped-upload-and-import","title":"Workflow - Order Shipped - Upload and Import","text":"<p>Open the Dynatrace Workflow app.</p> <p>Workflows are imported using the Upload button. </p> <p></p> <p>Pick the <code>dt_wftpl_astroshop_-_order_shipped.yaml</code> from your local system.</p> <p>When loaded a screen will appear called <code>Import workflow \"Astroshop - Order Shipped\"</code></p> <p>Select <code>Import</code> button.</p> <p></p>"},{"location":"06_bizevents_api/#workflow-order-shipped-js_set_parameters","title":"Workflow - Order Shipped - js_set_parameters","text":"<p>Select the <code>js_set_parameters</code>.</p> <p><code>Note:</code>  This will be the task/action that defines the parameters/variables that will be used by subsequent tasks and returns them in the result. By setting the parameters as nested attribute key:value pairs within a single variable, as additional parameters are needed they can easily be added without modifying any other code. Great best practice for any workflows you create.</p> <p>In the <code>Input section</code> set the values of the missing variables with the following:</p> <p><pre><code>BIZEVENTS_API_URL:\n\nReplace `&lt;tenant-id-env&gt;` with your Dynatrace environment ID and Env.\n\nProd Example:   `xxxxxx.live.dynatrace.com`  \nSprint Example: `xxxxxx.sprint.dynatracelabs.com`\n</code></pre> <pre><code>BIZEVENTS_API_TOKEN:\n\nUse the Business Event API Token we created in the Environment Setup.  \n\nPaste your token in between the quotes.\n</code></pre> </p> <p>Example should look like below:</p> <p></p>"},{"location":"06_bizevents_api/#workflow-order-shipped-enable-save-and-run","title":"Workflow - Order Shipped - Enable, Save and Run","text":"<p>Enable the <code>Event Trigger</code> flow.</p> <p>Select Save button.</p> <p></p> <p>When you run a workflow in an environment for the first time, Dynatrace asks to allow the AutomationEngine to run workflows for you.</p> <p>Click the Run button.</p> <p></p> <p>In the Run workflow window, click the Run button.</p> <p></p> <p>Click Allow and Run button.</p> <p></p>"},{"location":"06_bizevents_api/#workflow-order-shipped-review","title":"Workflow - Order Shipped - Review","text":"<p>We will review the task(s)/action(s) of the <code>Astroshop - Order Shipped</code> Workflow.  As discussed above, the workflow is sending simulated events that represent the <code>Astroshop Shipping</code> system when an Order is shipped.</p> <p>The most important task/action of this workflow is <code>insert_biz_event</code> task/action.  The included parameters match the required paramaters as if your customer was sending Business Events from their Environment/System to Dynatrace Business Events API.</p> <p>Below are the settings used in the <code>insert_biz_event</code> task/action of the <code>Astroshop - Order Shipped</code> workflow.</p> <p></p> <p>Business Events API Documenation</p> <p></p> <p></p>"},{"location":"06_bizevents_api/#conclusion","title":"Conclusion","text":"<p>We have completed the step of using a Dynatrace Workflow to send simulated events that represent the Astroshop Shipping system when an <code>Order Shipped</code> events occur. The next section will validate the data.</p>"},{"location":"06_bizevents_api/#data-validation","title":"Data Validation","text":"<p>In this section of the lab we will validate the data for the <code>Order Shipped</code> step of the <code>Order to Shipped</code> business process.</p>"},{"location":"06_bizevents_api/#query-business-events-in-dynatrace","title":"Query Business Events in Dynatrace","text":"<p>Using a Notebook execute the below DQL query which retrieves the business events for <code>astroshop.ordershipped.success</code> step.  </p> <p>DQL: <pre><code>fetch bizevents\n| filter event.provider == \"astroshop\" and event.type == \"astroshop.ordershipped.success\"\n| fields timestamp, event.provider, event.type, orderId\n| sort timestamp desc\n</code></pre></p> <p>Result:</p> <p></p>"},{"location":"06_bizevents_api/#conclusion_1","title":"Conclusion","text":"<p>We have completed data validation for the <code>Order Shipped</code> step of the <code>Order to Shipped</code> business process.</p>"},{"location":"06_bizevents_api/#continue","title":"Continue","text":"<p>In the next section, we'll use the captured Business Events to build a Business Metric utilizing OpenPipeline. </p> <ul> <li>Continue to Business Event Capture with Metric</li> </ul>"},{"location":"07_bizevents_metric/","title":"7. Business Events Metrics","text":""},{"location":"07_bizevents_metric/#business-events-metric","title":"Business Events - Metric","text":"<p>Business event metric extraction is a convenient way to create your own business metrics. </p> <p>It enables you to:</p> <ul> <li>To use with Dashboards and Notebooks for real-time monitoring and historical data analysis </li> <li>Alerting, such as when a certain value surges or drops </li> </ul> <p>This lab will utilize OpenPipeline to make a business metric from business events for the <code>Place Order</code> step of the Astroshop <code>Order to Shipped</code> business process.</p> <p></p>"},{"location":"07_bizevents_metric/#place-order-metric","title":"Place Order Metric","text":"<p>In this section of the lab we will create a counter metric for <code>Place Order</code> step.  We also want to report by Country.</p>"},{"location":"07_bizevents_metric/#business-metric-openpipeline-place-order","title":"Business Metric - OpenPipeline - Place Order","text":"<p>Launch the OpenPipeline app.</p> <p>Select <code>Business events</code> in the OpenPipeline tree.</p> <p>Select <code>Pipelines</code> tab.</p> <p>Select the <code>Astroshop</code> Pipeline.</p> <p></p>"},{"location":"07_bizevents_metric/#business-metric-openpipeline-processing-place-order","title":"Business Metric - OpenPipeline Processing - Place Order","text":"<p>Select the <code>Metric Extraction</code> tab.</p> <p>Select the <code>+ Processor</code> button (left side of the screen), then select <code>Counter metric</code></p> <p></p> <p><code>Note</code>: </p> <ul> <li><code>Counter metric</code> </li> </ul> <pre><code>Where you want to count the number `Place Order` occurrences.\n</code></pre> <ul> <li><code>Value metric</code> </li> </ul> <pre><code>Where you want to report on `Revenue`. The revenue field captured in the `Place Order` \nBusiness Event data values would be extracted and used as the metric value. \n</code></pre> <p>Fill out the fields with the following data:</p> <p>Name: </p> <pre><code>OrderShippedSucccess\n</code></pre> <p>Matching condition: </p> <pre><code>event.provider == \"astroshop\" and event.type == \"astroshop.placeorder.success\"\n</code></pre> <p>Metric key: </p> <pre><code>astroshop.placeorder.success\n</code></pre> <p>Dimensions: </p> <p>Select the Custom radio button.</p> <p>For the <code>Field name on record</code> and <code>Dimension name</code> sections use:</p> <pre><code>country\n</code></pre> <p>Click the <code>Add dimension</code> button.  This will add both fields. </p> <p>Select the Save button at the top right of the screen.</p> <p></p>"},{"location":"07_bizevents_metric/#conclusion","title":"Conclusion","text":"<p>We have completed the Business Metric capture for <code>Placer Order</code> step  of the <code>Order to Shipped</code> business process. The next section will validate the data.</p>"},{"location":"07_bizevents_metric/#data-validation","title":"Data Validation","text":"<p>In this section of the lab we will validate the data for the <code>Place Order</code> business metric.   We also want to see it broken out by country.</p>"},{"location":"07_bizevents_metric/#query-business-metric-in-dynatrace","title":"Query Business Metric in Dynatrace","text":"<p>Using a Notebook execute the below DQL query which retrieves the business metric <code>bizevents.astroshop.placeorder.success</code> split by country.  Note, you shoud see data within 3-5 minutes.</p> <p>DQL: <pre><code>timeseries placeorder.success = sum(bizevents.astroshop.placeorder.success), by:{country}\n</code></pre></p> <p>Result:</p> <p></p>"},{"location":"07_bizevents_metric/#conclusion_1","title":"Conclusion","text":"<p>We have completed data validation for the <code>Place Order</code> business metric.</p>"},{"location":"07_bizevents_metric/#continue","title":"Continue","text":"<p>In the next section, we'll use the captured Business Events to create an Alert.</p> <ul> <li>Continue to Business Event Capture with Alerts</li> </ul>"},{"location":"08_bizevents_alerts/","title":"8. Business Events Alerts","text":""},{"location":"08_bizevents_alerts/#business-events-alert","title":"Business Events - Alert","text":"<p>Real-time business metric alerting in Dynatrace is crucial for proactive issue identification, rapid response, and optimized business outcomes by enabling businesses to monitor and react to performance issues impacting key business processes and user experience before they escalate. </p> <p>By proactively addressing performance issues and optimizing business processes, Dynatrace helps organizations achieve better business outcomes, such as increased revenue, higher conversion rates, and improved customer satisfaction. </p> <p>This lab will we will use the <code>Place Order</code> business events <code>Revenue</code> data to create an alert when <code>Orders</code> have revenue = 0.   </p> <p>This is an example scenario for this lab, but synchronization failures can happen and Dynatrace can provide immediate alerting notification when they occur.</p> <p>Examples of where this could occur:</p> <ul> <li>Manual Data Entry</li> <li>Different Coding Systems</li> <li>Bidirectional Syncing</li> </ul> <p></p>"},{"location":"08_bizevents_alerts/#business-alert","title":"Business Alert","text":"<p>In this section of the lab we will create an alert for <code>Place Order</code> Business Events that have revenue = 0.</p>"},{"location":"08_bizevents_alerts/#business-alert-openpipeline-place-order","title":"Business Alert - OpenPipeline - Place Order","text":"<p>Launch the OpenPipeline app.</p> <p>Select <code>Business events</code> in the OpenPipeline tree.</p> <p>Select <code>Pipelines</code> tab.</p> <p>Select the <code>Astroshop</code> Pipeline.</p> <p></p>"},{"location":"08_bizevents_alerts/#business-alert-openpipeline-data-extraction-place-order","title":"Business Alert - OpenPipeline - Data extraction - Place Order","text":"<p>Select <code>Data extraction</code> tab.</p> <p>Select the <code>+ Processor</code> button (left side of the screen), then select <code>Davis event</code>.</p> <p></p> <p>Fill out the fields with the following data:</p> <p>Name: </p> <pre><code>OrdersWithZeroValues\n</code></pre> <p>Matching condition: </p> <pre><code>event.provider == \"astroshop\" and event.type == \"astroshop.placeorder.success\" and revenue == 0\n</code></pre> <p>Event template: </p> <pre><code>Astroshop - Orders with Zero Values\n</code></pre> <p>Event description: </p> <pre><code>This can occur when data synchronization failures occur between the Astroshop inventory system and website. Please treat this a P1!\n</code></pre> <p>Event properties:</p> <p>Davis events are enriched with additional fields, as detailed in the Davis event model documentation.</p> <p><pre><code>The event.type, event.name and event.description sections should be \npre-filled from the previous entries you configured above.  \n\nWe will only change the event.type field.\n</code></pre> Plese update the event.type field to use the following:</p> <pre><code>Right side value:   ERROR_EVENT\n</code></pre> <p>Please add new entries for Event properties section using the following:</p> <pre><code>Left side name:     dt.davis.timeout\nRight side value:   10\n</code></pre> <pre><code>Left side:          dt.davis.is_merging_allowed \nRight side value:   true\n</code></pre> <pre><code>Left side name:     dt.source_entity \nRight side value:   {dt.entity.process_group}\n</code></pre> <p>Select the Save Button at the top right of the screen.</p> <p></p>"},{"location":"08_bizevents_alerts/#conclusion","title":"Conclusion","text":"<p>We have completed the <code>Place Order</code> Business Alert.  The next section will validate the data.</p>"},{"location":"08_bizevents_alerts/#data-validation","title":"Data Validation","text":"<p>In this section of the lab we will validate the data for the <code>Place Order</code> Business Alert was fired.   </p>"},{"location":"08_bizevents_alerts/#problems-app","title":"Problems App","text":"<p>Open Problems App,  you should see <code>Astroshop - Orders with Zero Values</code> problem generated within 10-20 minutes.  We can come back to this data validation after the next section is complete.</p> <p></p>"},{"location":"08_bizevents_alerts/#conclusion_1","title":"Conclusion","text":"<p>We have completed data validation for the <code>Place Order</code> Business Alert.</p>"},{"location":"08_bizevents_alerts/#continue","title":"Continue","text":"<p>In the next section, we'll use Business Events to create a Business Flow.</p> <ul> <li>Continue to Business Flow with Business Events</li> </ul>"},{"location":"09_bizevents_business_flow/","title":"Business Events - Business Flow","text":"<p>IT teams and business owners can use Business Flow Business Flow App to monitor and analyze critical business process flows. You can track end-to-end process delays, detect process anomalies, and report business key performance indicators (KPIs).</p> <p>With Business Flow App, you can:</p> <ul> <li>Report business process KPIs, including flows completed (conversions), average flow completion time, business exceptions, and a business KPI of your choice</li> <li>Visualize and analyze individual process flows from start to finish</li> <li>Detect and explore uncompleted or dropped process flows to determine the cause, such as an IT error, a business exception, or  abnormal inter-step transit time</li> <li>Visualize process errors and business exceptions at each step</li> </ul>"},{"location":"09_bizevents_business_flow/#business-flow","title":"Business Flow","text":"<p>In this section of the lab we will create a Business Flow using the Business Events we have defined for the Astroshop <code>Order to Shipped</code> business process.</p>"},{"location":"09_bizevents_business_flow/#business-flow-order-to-shipped-configuration-name","title":"Business Flow - Order to Shipped - Configuration Name","text":"<p>Launch the Business Flow app.</p> <p>Select <code>+ Business Flow</code> to get to the configuration page.</p> <p></p> <p>Select the Pencil icon at the top left and rename the Configuration using the following:</p> <p>Name:</p> <pre><code>Astroshop - Order to Shipped\n</code></pre> <p>Select the Save button.</p> <p></p>"},{"location":"09_bizevents_business_flow/#business-flow-place-order-step","title":"Business Flow - Place Order Step","text":"<p>For <code>Step 1</code> configuration use the following:</p> <p>Name - (click the Step 1 box to edit):</p> <pre><code>Place Order\n</code></pre> <p>Drop-down event box:</p> <pre><code>astroshop.placeorder.success\n</code></pre> <p></p> <p>After picking <code>astroshop.placeorder.success</code>, the <code>Place Order</code> step should look like this below:</p> <p></p>"},{"location":"09_bizevents_business_flow/#business-flow-fraud-check-step","title":"Business Flow - Fraud Check Step","text":"<p>Click the <code>Place Order</code> step.  </p> <p>Select the + button on the bottom.  </p> <p>This will add a new step under the <code>Place Order</code> called <code>Step 2</code>. </p> <p>For <code>Step 2</code> configuration use the following:</p> <p>Name - (click the Step 2 box to edit):</p> <pre><code>Fraud Check\n</code></pre> <p>Drop-down event box:</p> <pre><code>astroshop.fraudcheck.success\n</code></pre> <p></p> <p>After picking <code>astroshop.fraudcheck.success</code>, the <code>Fraud Check</code> step should look like this below:</p> <p></p>"},{"location":"09_bizevents_business_flow/#business-flow-order-shipped-step","title":"Business Flow - Order Shipped Step","text":"<p>Click the <code>Fraud Check</code> step.  </p> <p>Select the + button on the bottom.  </p> <p>This will add a new step under the <code>Fraud Check</code> called <code>Step 3</code>.</p> <p>For <code>Step 3</code> configuration use the following:</p> <p>Name - (click the Step 3 box to edit):</p> <pre><code>Order Shipped\n</code></pre> <p>Drop-down event box:</p> <pre><code>astroshop.ordershipped.success\n</code></pre> <p></p> <p>After picking <code>astroshop.ordershipped.success</code>, the <code>Order Shipped</code> step should look like this below:</p> <p></p>"},{"location":"09_bizevents_business_flow/#business-flow-correlation-id","title":"Business Flow - Correlation ID","text":"<p>In the Global settings section use the following for the <code>Correlation ID</code> field:</p> <pre><code>orderId\n</code></pre> <p></p>"},{"location":"09_bizevents_business_flow/#business-flow-kpi","title":"Business Flow - KPI","text":"<p>For the KPI is extracted from the event to calculate revenue field, use the following:</p> <p>Mapping event dropdown list pick:</p> <pre><code>astroshop.placeorder.success\n</code></pre> <p>Mapping attribute from event dropdown list pick:</p> <pre><code>revenue\n</code></pre> <p></p>"},{"location":"09_bizevents_business_flow/#business-flow-validate-save","title":"Business Flow - Validate &amp; Save","text":"<p>Select the <code>Validate &amp; Save</code> button at the top right of the screen.</p> <p></p>"},{"location":"09_bizevents_business_flow/#business-flow-view-flow","title":"Business Flow - View flow","text":"<p>Select the <code>View flow</code> button at the top right of the screen.</p> <p></p>"},{"location":"09_bizevents_business_flow/#conclusion","title":"Conclusion","text":"<p>We have completed the Business Flow configuration for the Astroshop <code>Order to Shipped</code> business process. The next section will validate the data.</p>"},{"location":"09_bizevents_business_flow/#data-validation","title":"Data Validation","text":"<p>In this section of the lab we will validate the data for the <code>Business Flow</code> for the Astroshop <code>Order to Shipped</code> business process. </p>"},{"location":"09_bizevents_business_flow/#business-flow-app","title":"Business Flow App","text":"<p>Business processes are the automation backbone of modern businesses, and they must operate efficiently to meet business goals. Most of those processes can impact customer experience, either positively or negatively. </p> <p>Most organizations rely on hundreds, if not thousands, of business processes, from procurement to order fulfillment. These processes depend on your IT systems to achieve their goals efficiently and at scale. The <code>Business Flow</code> app makes it easier than ever to monitor complex business processes.</p>"},{"location":"09_bizevents_business_flow/#reported-kpis","title":"Reported KPIs","text":"<p>In the <code>Business Flow App</code>,  top section we should have data for the following:</p> <ul> <li>Revenue - Business performance indicator (by default, revenue)</li> <li>Conversions - Fulfillment or conversion of unique flows in the business process</li> <li>Avg. Duration - Average flow duration (the time from start to end of a business process)</li> </ul> <p></p> <p>Reported KPIs Documentation</p>"},{"location":"09_bizevents_business_flow/#tree-view","title":"Tree View","text":"<p>The Tree view displays all steps with the corresponding numbers of unique flows at each step. If you have defined business exceptions, the number of exceptions is displayed for each relevant step. We should have data for the following:</p> <ul> <li>Unique Flows for each Step</li> <li>Drops - A drop is an incomplete business process that fails to reach the next step due to an IT error, a business exception, or an above-average delay. It is also referred to as dropped flow</li> <li>Inflights - An inflight flow refers to a unique business process flow that is in progress at a given step. It remains inflight unless it exceeds the average delay for that step, at which point it is considered a dropped flow (drop).</li> <li>Avg. Duration between each step</li> </ul> <p></p> <p>Terminology Documenation</p>"},{"location":"09_bizevents_business_flow/#flow-details","title":"Flow details","text":"<p>On the side panel, expand the dropdown menu to see a list of completed unique flows that have reached that step. For any of the listed flows, select the magnifying glass icon (under Actions in the rightmost side panel) to explore the end-to-end business flow details.</p> <p></p>"},{"location":"09_bizevents_business_flow/#conclusion_1","title":"Conclusion","text":"<p>We have completed data validation for the Astroshop <code>Order to Shipped</code> Business Flow.</p>"},{"location":"09_bizevents_business_flow/#business-flow-alerting","title":"Business Flow Alerting","text":"<p>The Business Flow app includes Davis Anomaly Detectors for the following: </p> <ul> <li>Business KPIs </li> <li>Conversions/Fulfilment</li> <li>Errors/Business Exceptions</li> <li>Avg duration</li> </ul> <p>Davis Anomaly Detectors are created from Business Flow app which will generate Davis events that will derive in Davis Problems, appearing in the Problems app.</p> <p>This feature uses a sliding window of 60 minutes, and analyzer is triggered every minute.</p> <p>In this section of the lab, using the Business Flow app,  we will enable Davis anomaly detection for <code>Avg. duration</code> for the Astroshop <code>Order to Shipped</code> business process. </p>"},{"location":"09_bizevents_business_flow/#business-flow-astroshop-order-to-shipped-davis-alert","title":"Business Flow - Astroshop - Order to Shipped - Davis Alert","text":"<p>Using the Business Flow app, Open the <code>Astroshop - Order to Shipped</code> Business Flow</p> <p>At the top of the screen in the KPIs overview,  click the Avg. Duration link.</p> <p></p> <p>The <code>KPIs over time</code> screen will appear.  </p> <p>Find the <code>Avg. duration</code> section,  bottom of the screen.</p> <p>In the chart section for the <code>Avg. duration</code> click the bell icon next to the chart,  it will be on the right side.</p> <p></p> <p>The <code>Configure Davis anomaly detection for Avg. duration</code> screen will appear.</p> <p>In the <code>Analyzers</code> section, confirm the setting selected is the following:</p> <pre><code>Static threshold is anomaly detection\n</code></pre> <p>Please use the following value in the <code>Threshold</code> field:</p> <pre><code>60,000,000,000\n</code></pre> <p>In the <code>Alert condition</code> confirm the setting selected is the following: </p> <pre><code>Alert if metric is above\n</code></pre> <p>Click the Save button.</p> <p></p>"},{"location":"09_bizevents_business_flow/#conclusion_2","title":"Conclusion","text":"<p>We have completed configuration for the Business Flow Davis Anomaly Detector for  <code>Avg. duration</code> greater than 1 second for the <code>Astroshop - Order to Shipped</code> Business Flow.  We set this value to low for the lab exercise so a Problem will be generated. The next section will validate the data.  </p>"},{"location":"09_bizevents_business_flow/#data-validation_1","title":"Data Validation","text":"<p>In this section of the lab we will validate the data Business Flow Davis Anomaly Detector for  <code>Avg. duration</code> greater than 1 second for the <code>Astroshop - Order to Shipped</code> Business Flow.   </p>"},{"location":"09_bizevents_business_flow/#problems-app","title":"Problems App","text":"<p>Open the Problems App.</p> <p>A new problem will be generated called <code>Business Flow Astroshop - Order to Shipped - Avg. duration</code>.</p> <p>This might take 5-10 minutes. We can come back and check after the next lab.</p> <p></p> <p>Click the <code>Business Flow Astroshop - Order to Shipped - Avg. duration</code> which will open the Problem details screen.</p> <p></p>"},{"location":"09_bizevents_business_flow/#conclusion_3","title":"Conclusion","text":"<p>We have completed data validation for the Business Flow Davis Anomaly Detector for <code>Avg. duration</code>.</p>"},{"location":"09_bizevents_business_flow/#continue","title":"Continue","text":"<p>In the next section, we'll learn how to use a Business Observability Dashboard to support customers.</p> <ul> <li>Continue to Business Dashboard</li> </ul>"},{"location":"10_bizevents_dashboard/","title":"Dashboards","text":"<p>Supporting customers to order from you and then delivering those products involves not just many of your own systems but also 3rd parties as well. This can make it difficult to understand, for a given customer, just where in this complex process is their order stuck/lost and can be very costly to then either manually retrieve orders or pay compensation to customers.</p> <p>This particular view is designed to give an end-to-end view of order health, in real-time. The indicators along the top show the health and security of the underlying IT systems, and the Business KPIs can help track metrics which a Business stakeholder would care about.</p> <p>In this example, we can track things like \"Probable lost orders\" which haven't progressed through this journey, as well as the financial impact of \"Vouchers offered\" - where we've felt obliged to offer a discount when people have had issues with orders getting stuck shipping etc.</p> <p>This view is available, live, in the Playground environment for both internal and customer viewing:</p> <p>Retail Order Delivery</p> <p></p>"},{"location":"10_bizevents_dashboard/#business-observability-dashboard","title":"Business Observability Dashboard","text":"<p>As part of this training we have provided a Business Observability dashboard to upload. </p> <p>This dashboard provides a comprehensive, real-time view of your business's key performance indicators (KPIs) and operational health, enabling data-driven decision-making and proactive problem-solving.  </p> <p>This dashboard encompasses all of the training topics we covered today in a single view.  </p> <p>The example dashboard is also meant to provide ideas for the Art of the Possible when working with Business Observability uses cases.</p>"},{"location":"10_bizevents_dashboard/#astroshop-order-to-shipped-business-observability-dashboard-download","title":"Astroshop - Order to Shipped Business Observability Dashboard - Download","text":"<p>Download the dashboard <code>Astroshop - Order to Shipped Business Observability Dashboard</code> using the source file Astroshop_-_Order_to_Shipped_Business_Observability_Dashboard.json to your local system.</p>"},{"location":"10_bizevents_dashboard/#astroshop-order-to-shipped-business-observability-dashboard-upload","title":"Astroshop - Order to Shipped Business Observability Dashboard - Upload","text":"<p>Open the <code>Dashboards</code> app.</p> <p>Select the <code>Upload</code> button and pick the Astroshop_-_Order_to_Shipped_Business_Observability_Dashboard.json from your local system.</p> <p></p> <p>When the Astroshop_-_Order_to_Shipped_Business_Observability_Dashboard first loads a <code>Review all code</code> button appears.  </p> <p>Select the <code>Review all code</code> button.</p> <p></p> <p>A <code>Review Code</code> box will appear.</p> <p>Select the checkbox for \"Always trust code in this document\".</p> <p>Then select the <code>Accept and run</code> button.</p> <p></p> <p>When uploaded,  you should see all tiles with data.</p> <p></p>"},{"location":"10_bizevents_dashboard/#enable-it-issues","title":"Enable IT ISSUES","text":"<p>Wait,  there is more fun!!</p> <p>Go to your Astroshop UI browser tab.</p> <p>In the url address bar, append the following to the end of the url.</p> <p><pre><code>/feature\n</code></pre> Find the <code>paymentServiceUnreachable</code> and select the drop down to on.</p> <p>Then select the <code>save</code> button.</p> <p></p> <p>Note: Select this link Astroshop/OpenTelemetry Demo App Feature Flags for more details on the Feature Flags.</p>"},{"location":"10_bizevents_dashboard/#it-issues-place-order-step","title":"IT ISSUES - Place Order Step","text":"<p>Within 10 minutes an IT Issue should be opened in the <code>Place Order</code> Step section of the dashboard.  You will need to refresh the dashboard as auto-refresh is turned off.   </p> <p></p> <p>Click the <code>IT</code> link in the drilldown section under the <code>Place Order</code> Step.  This will open the IT Problem that was automatically detected by the Davis AI.</p> <p></p>"},{"location":"10_bizevents_dashboard/#business-issues-place-order-step","title":"BUSINESS ISSUES - Place Order Step","text":"<p>Click the <code>Business</code> link in the drilldown section under the <code>Place Order</code> Step.  This will open the Business Problem that was generated from our previous lab, <code>Avg. duration</code> greater than 60 seconds for the <code>Astroshop - Order to Shipped</code> Business Process.</p> <p></p>"},{"location":"10_bizevents_dashboard/#security-issues-place-order-step","title":"SECURITY ISSUES - Place Order Step","text":"<p>Click the <code>Security</code> link in the drilldown section under the <code>Place Order</code> Step.  This will open all open vulnerabilities for the Astroshop-Frontend workload,  which supports <code>Place Order</code> Step of the Business Process.</p> <p></p>"},{"location":"10_bizevents_dashboard/#business-observability-orderid-lookup-dashboard","title":"Business Observability OrderID Lookup Dashboard","text":"<p>We have provided one more dashboard.  The OrderID Lookup dashboard provides the following:</p> <pre><code>Real-time Status KPI's for all Orders\n\nLook up any OrderID and get the status\n\nFilter on all Failed Orders \n\nDrilldown to Distributed Traces\n\nContext to the health of backend IT Service where Orders start\n</code></pre>"},{"location":"10_bizevents_dashboard/#astroshop-orderid-lookup-dashboard-downlaod","title":"Astroshop - OrderID Lookup Dashboard - Downlaod","text":"<p>Download the dashboard <code>Astroshop - OrderID Lookup Dashboard</code> using the source file Astroshop_-_OrderID_Lookup_Dashboard.json to your local system.</p>"},{"location":"10_bizevents_dashboard/#astroshop-orderid-lookup-dashboard-upload","title":"Astroshop - OrderID Lookup Dashboard - Upload","text":"<p>Open the <code>Dashboards</code> app.</p> <p>Select the <code>Upload</code> button and pick the Astroshop_-_OrderID_Lookup_Dashboard.json from your local system.</p> <p></p> <p>When the Astroshop_-_OrderID_Lookup_Dashboard first loads a <code>Review all code</code> button appears.  </p> <p>Select the <code>Review all code</code> button.</p> <p></p> <p>A <code>Review Code</code> box will appear.</p> <p>Select the checkbox for \"Always trust code in this document\".</p> <p>Then select the <code>Accept and run</code> button.</p> <p></p> <p>When uploaded,  you should see all tiles with data.</p> <p></p> <p></p> <p></p>"},{"location":"10_bizevents_dashboard/#conclusion","title":"Conclusion","text":"<p>We have completed the hands on exercises for the training.  We will now move to the Wrap Up section.</p>"},{"location":"10_bizevents_dashboard/#continue","title":"Continue","text":"<p>In the next section, we'll Wrap Up the Dynatrace Observability Lab.</p> <ul> <li>Continue to Wrap Up</li> </ul>"},{"location":"11_wrapup/","title":"11. Wrap Up","text":""},{"location":"11_wrapup/#wrap-up","title":"Wrap Up","text":""},{"location":"11_wrapup/#key-takeaways","title":"Key Takeaways","text":"<ol> <li>Dynatrace Business Analytics is powered by business events, a special class of events in Dynatrace.</li> <li>Business events deliver real-time business data from anywhere, empowering business and IT teams with the reporting, analytics, optimization, and automation capabilities required to improve business outcomes.</li> <li>Dynatrace automatically enriches business events with Smartscape topology metadata, providing the IT context needed to analyze anomalies and optimize business processes.</li> <li>Business events capture business data from anywhere, including OneAgent, log files, real user monitoring (RUM) sessions, and external tools and data sources.</li> <li>Dynatrace OneAgent uniquely captures business events from in-flight application payloads \u2013 without requiring any code changes. OneAgent prioritizes business events over infrastructure and application monitoring to ensure the lossless precision many business use cases demand.</li> <li>Teams can leverage business events across the Dynatrace platform -- including visualizing real- time data with interactive Dashboards, drilling down and analyzing data in Notebooks, optimizing business processes with purpose-built apps like Business Flow, and automating tasks with Workflows -- to access precise, real-time business data all in context of IT to unlock and enhance critical business use cases.</li> </ol>"},{"location":"11_wrapup/#continue","title":"Continue","text":"<p>Now that the lab has been completed, in the next section we will clean up the codespaces instance.</p> <ul> <li>Continue to cleanup</li> </ul>"},{"location":"cleanup/","title":"12. Cleanup","text":""},{"location":"cleanup/#clean-up","title":"Clean Up","text":"<p>Deleting the codespace from inside the container</p> <p>We like to make your life easier, for convenience there is a function loaded in the shell of the Codespace for deleting the codespace, just type <code>deleteCodespace</code>. This will trigger the deletion of the codespace.</p> <p>Another way to do this is by going to https://github.com/codespaces and delete the codespace.</p> <p>You may also want to deactivate or delete the API token needed for this lab.</p> <p>Lab Guide Updates</p> <p>This Dynatrace lab guide was made by Rylee Berger and Sabiela Woldemichael, CoE Enablement interns.</p>"},{"location":"codespaces/","title":"3. Codespaces","text":""},{"location":"codespaces/#codespaces","title":"Codespaces","text":""},{"location":"codespaces/#codespace-prep","title":"Codespace Prep","text":""},{"location":"codespaces/#configure-codespaces-settings-secrets","title":"Configure Codespaces Settings - Secrets","text":"<p>If you previously participated in a Dynatrace training using Codespaces, you may have existing secrets that will conflict with our training today.</p> <p>Open the <code>GitHub Codespaces settings</code> link: https://github.com/settings/codespaces in a new tab in your browser.</p> <p>Under the Secrets section,  Codespace user secrets,  check if these secrets exist.</p> <pre><code>DT_INGEST_TOKEN\n\nDT_OPERATOR_TOKEN\n\nDT_TENANT\n</code></pre> <p>If found, select the delete icon for each secret that exists.</p> <p></p> <p>You will get a <code>Delete secret</code> prompt, select the <code>Yes, delete this secret</code> button.</p> <p></p> <p>You may get a <code>Confirm access</code> prompt, enter your Github password and then select the <code>Confirm</code> button.</p> <p></p> <p>Leave the <code>GitHub Codespaces settings</code> browser tab open. </p> <p>In next section of this lab we will be changing another setting.</p>"},{"location":"codespaces/#configure-codespaces-settings-default-idle-timeout","title":"Configure Codespaces Settings - Default idle timeout","text":"<p>By default, codespaces instances will suspend after 30 minutes of inactivity.  This may cause problems with your lab.  </p> <p>Scroll down GitHub Codespaces settings section and find the section called <code>Default idle timeout</code>.</p> <p>Increase the <code>Default idle timeout</code> setting in the minutes section to use the following:</p> <p><pre><code>240\n</code></pre> Select the <code>Save</code> button.</p> <p></p> <p>When complete you can close the <code>GitHub Codespaces settings</code> browser tab.</p>"},{"location":"codespaces/#create-codespace","title":"Create Codespace","text":"<p>Click to open Codespaces for this lab repository:</p> <p></p> <p>Codespace Configuration</p> <ul> <li>Branch<ul> <li>select the main branch</li> </ul> </li> <li>Dev container configuration<ul> <li>select Enablement Business Observability</li> </ul> </li> <li>Machine type<ul> <li>select 4-core</li> </ul> </li> <li>Region<ul> <li>select any region, preferably one closest to your Dynatrace tenant</li> </ul> </li> </ul>"},{"location":"codespaces/#codespaces-cluster-set-up","title":"Codespaces Cluster Set Up","text":"<p>The source repository for this lab is: </p> <p>enablement-business-observability</p> <p>Open the link above in a new tab in your browser.</p> <p>Click on <code>Code</code>.  Click on <code>Codespaces</code>.  Click on <code>New with options</code>.</p> <p></p> <p>Choose the Branch <code>main</code>.  </p> <p>Choose the Dev Container Configuration <code>Enablement Business Observability</code>.</p> <p>Choose a region close to your Dynatrace tenant. If you run into issues with spinning up your codespaces instance, try selecting a different region.</p> <p>Choose Machine Type <code>4-core</code>.</p> <p></p> <p>Fill in recommend secrets sections for the following that you have in your saved notepad:</p> <p><pre><code>DT_TENANT\n\nDT_OPERATOR_TOKEN\n\nDT_INGEST_TOKEN\n</code></pre> When done select the Create codespace button.</p> <p></p> <p>\u26a0\ufe0f If any of the secrets sections have a checkbox Associated with repository?, leave this browser tab open.  Go back to Configure Codespaces Settings - Secrets section above in this lab and complete that section. Refresh this browser tab and you should now be able to fill in the secrets. \u26a0\ufe0f</p>"},{"location":"codespaces/#codespaces-codespace-instance","title":"Codespaces Codespace Instance","text":"<p>Your browser tab will change to the Codespace initialize screen.</p> <p>Allow the Codespace instance to fully initialize.  It is not ready yet.</p> <p>It will take about 10 minutes to fully finish.</p> <p>During the initialize phase you will see:</p> <p></p> <p>The Codespace instance will run the post initialization scripts.</p> <p></p> <p>Again, it will take about 10 minutes to fully finish...give it time!</p> <p>When fully finished you see below.</p> <p></p>"},{"location":"codespaces/#astroshop-validation","title":"Astroshop Validation","text":"<p>In the Codespace window,  you will see a section called: </p> <p><pre><code>This devcontainer is exposing the following processes\n</code></pre> In the  <code>Astroshop UI</code> section,  cmd + click the url or copy and paste the url in a new browser tab.  This will launch <code>Astroshop UI</code>.</p> <p></p> <p>If you caught in time you could also select the Open in Browser pop up at the very bottom right of the screen to Launch Astroshop.   Either approach works!</p> <p></p> <p>If for some reason Astroshop is not connecting when opening in new tab run the below command in the terminal.</p> <p><pre><code>exposeAstroshop\n</code></pre> Then in the  <code>Astroshop UI</code> section,  cmd + click the url or copy and paste the url in a new browser tab.  This will launch <code>Astroshop UI</code>.</p> <p>Take a minute to navigate around.</p> <p></p>"},{"location":"codespaces/#dynatrace-data-validation-distributed-traces","title":"Dynatrace Data Validation - Distributed Traces","text":"<p>Open the <code>Distributed Tracing</code> app.</p> <p>In the filter section copy and paste this below:</p> <pre><code>Service = frontend AND Endpoint = \"/api/checkout\"\n</code></pre> <p>Select the <code>Update</code> button.</p> <p></p> <p>Validate you see traces for \"/api/checkout\".</p> <p></p> <p>Select a single trace to see the single trace details.</p> <p></p>"},{"location":"codespaces/#dynatrace-data-validation-logs","title":"Dynatrace Data Validation - Logs","text":"<p>Open the <code>Logs</code> app.</p> <p>In the filter section copy and paste this below:</p> <pre><code>content = \"*frauddetectionservice - Consumed record with orderId*\"\n</code></pre> <p>Select the <code>Run query</code> button.</p> <p></p> <p>Validate you see log lines for \"frauddetectionservice - Consumed record with orderId:\".</p> <p></p>"},{"location":"codespaces/#troubleshooting","title":"Troubleshooting","text":"<p>If you don't see data for Distributed Traces and Logs data validation steps above do the following.</p> <p>Environment Variables Validation:</p> <p>In the Codespaces terminal run the following commands:</p> <pre><code>echo $DT_TENANT\n\necho $DT_OPERATOR_TOKEN\n\necho $DT_INGEST_TOKEN\n</code></pre> <p>Validate the variables output to what you configured in the <code>Configure Codespaces Settings - Secrets</code> section above in this training.   </p> <p>Make sure to check for:</p> <pre><code>\u26a0\ufe0f No apps in the URL! \u26a0\ufe0f\n\n\u26a0\ufe0f Make sure there is no trailing / at the end of the DT_TENANT \u26a0\ufe0f\n\n\u26a0\ufe0f Make sure the $DT_OPERATOR_TOKEN &amp; $DT_INGEST_TOKEN are not the same \u26a0\ufe0f\n</code></pre> <p></p> <p>If there are mistakes,  navigate to the GitHub Codespaces page at https://github.com/codespaces/</p> <p>Locate your instance, click the <code>...</code> button, and click <code>Delete</code>.</p> <p></p> <p>Then go back and collect the correct information needed for:</p> <pre><code>DT_INGEST_TOKEN\n\nDT_OPERATOR_TOKEN\n\nDT_TENANT\n</code></pre> <p>Then resume the lab starting at the <code>Codespaces Cluster Set Up</code> section above in this training.</p> <p>If the variables are correct, we need to confirm Astroshop and Dynatrace are running correctly.</p> <p>Astroshop Validation:</p> <p>In the Codespaces terminal run the following commands:</p> <pre><code>kubectl get pods -n astroshop\n</code></pre> <p></p> <p>Dynatrace Validation:</p> <p>In the Codespaces terminal run the following commands:</p> <p><pre><code>kubectl get pods -n dynatrace\n</code></pre> </p> <p>If any of the Astroshop or Dynatrace Pods are not in a STATUS of running it would be best to Delete this Codespace instance.</p> <p>Navigate to the GitHub Codespaces page at https://github.com/codespaces/</p> <p>Locate your instance, click the <code>...</code> button, and click <code>Delete</code>.</p> <p></p> <p>Then resume the lab starting at the <code>Codespaces Cluster Set Up</code> section above in this training.</p>"},{"location":"codespaces/#codespace-disconnected","title":"Codespace Disconnected","text":"<p>When your Codespace for this training is up and running and you accidently close the Codespace browser tab, or network reconnection errors occur, don't worry, we can relaunch it.    </p> <p>Navigate to the GitHub Codespaces page at https://github.com/codespaces/</p> <p>At the bottom of the page under the <code>Owned by</code> section, you should see your Codespace instance in an <code>Active</code> state.</p> <p>Select the <code>...</code> to the right of Active.</p> <p>This will open a menu of items.  </p> <p>Select <code>Open in Browser</code>.   </p> <p></p> <p>This will launch your running Codespace instance in a new browser tab.</p>"},{"location":"codespaces/#conclusion","title":"Conclusion","text":"<p>We have completed the step of Codespaces setup,  verified Astroshop is running,  verified the Distributed traces and Log lines needed are being consumed.  We are ready to move to the Hands on Labs!!</p>"},{"location":"codespaces/#continue","title":"Continue","text":"<p>In the next section, we'll capture Business Events using the OneAgent.</p> <ul> <li>Continue to Business Event Capture with OneAgent</li> </ul>"},{"location":"content-template/","title":"Content template","text":""},{"location":"content-template/#topic","title":"Topic","text":"<p>Description</p>"},{"location":"content-template/#subtopic","title":"Subtopic","text":"<p>The demo application in this lab, AstroShop, contains OpenTelemetry instrumentation that can be picked up by OneAgent.</p> <p></p>"},{"location":"content-template/#continue","title":"Continue","text":"<p>In the next section, we'll launch our Codespaces instance.</p> <ul> <li>Continue to Codespaces</li> </ul>"},{"location":"getting-started/","title":"2. Getting Started","text":""},{"location":"getting-started/#getting-started","title":"Getting Started","text":""},{"location":"getting-started/#dynatrace-tenant-setup","title":"Dynatrace Tenant Setup","text":"<p>You will need a Dynatrace SaaS tenant.</p>"},{"location":"getting-started/#identify-dynatrace-saas-tenant","title":"Identify Dynatrace SaaS Tenant","text":"<p>Make a note of the Dynatrace environment name. This is the first part of the URL. <code>abc123</code> would be the environment ID for <code>https://abc123.apps.dynatrace.com</code>. </p> <p>When you copy the url for the tenant, please enter it without the 'apps' part, see examples below: </p> <pre><code>Production -&gt; https://abc123.live.dynatrace.com \n\nSprint -&gt; https://abc123.sprint.dynatracelabs.com \n</code></pre> <p>For example, if you are using a Dynatrace production tenant it will look like this below,  where abc123 would be your your-environment-id.</p> <pre><code>https://abc123.live.dynatrace.com\n</code></pre> <p>\u26a0\ufe0f Again, no apps in the URL! \u26a0\ufe0f</p> <p>\u26a0\ufe0f Make sure there is no trailing / at the end of the url \u26a0\ufe0f</p>"},{"location":"getting-started/#enable-nodejs-business-event-oneagent-feature","title":"Enable Node.js Business Event OneAgent Feature","text":"<p>Open the <code>Settings Classic</code> App.</p> <p>In the tree select <code>Preferences</code>, then <code>OneAgent features</code>.</p> <p></p> <p>Filter by:</p> <pre><code>Node.js Business Events\n</code></pre> <p>Select the sliders to enabled:</p> <pre><code>Node.js Business Events [Opt-In]\n</code></pre> <pre><code>Instrumentation enabled (change needs a process restart)\n</code></pre> <p>Select the <code>Save changes</code> button at the bottom left of the screen.</p> <p></p>"},{"location":"getting-started/#enable-opentelemetry-oneagent-features","title":"Enable OpenTelemetry OneAgent Features","text":"<p>Open the <code>Settings Classic</code> App.</p> <p>In the tree select <code>Preferences</code>, then <code>OneAgent features</code>.</p> <p></p> <p>In the Filter by section, use below and hit return.</p> <pre><code>opentel\n</code></pre> <p>Enable all,  then expand the Details for each and make sure that second Enabled button is also selected where applicable.</p> <p>When done, select the <code>Save changes</code> button.</p> <p></p>"},{"location":"getting-started/#enable-log-ingestion","title":"Enable Log Ingestion","text":"<p>Open the <code>Settings Classic</code> App.</p> <p>In the tree select <code>Log Monitoring</code>, then <code>Log ingest rules</code>.</p> <p>Make sure the <code>[Built-in] Ingest all logs</code> rule is enabled.</p> <p></p>"},{"location":"getting-started/#enable-limit-outbound-connections","title":"Enable Limit Outbound Connections","text":"<p>During the hands on exercise we will use a Dynatrace Workflow to post data back to your tenanat via the Business Event API.  To do this we need to enable outbound connections for your tenant.</p> <p>Open the <code>Settings Classic</code> App.</p> <p>In the tree select <code>Preferences</code>, then <code>Limit outbound connections</code>.</p> <p>Make sure the <code>Limit outbound connections to endpoints in the allow list</code> is enabled.</p> <p>In the allow list section your tenant info as shown in below examples:</p> <pre><code>Production -&gt; abc123.live.dynatrace.com \n\nSprint -&gt; abc123.sprint.dynatracelabs.com \n</code></pre> <p>For example, if you are using a Dynatrace production tenant it will look like this below,  where abc123 would be your your-environment-id.</p> <pre><code>abc123.live.dynatrace.com\n</code></pre> <p>Select the Save changes button at the bottom left of the screen.</p> <p></p>"},{"location":"getting-started/#enable-third-party-vulnerability-analytics","title":"Enable Third-party Vulnerability Analytics","text":"<p>Open the <code>Settings Classic</code> App.</p> <p>In the tree select <code>Preferences</code>, then <code>Application Security</code>.  then <code>Vulnerability Analytics</code>, then <code>General</code> settings.</p> <p>In <code>Third-party Vulnerability Analytics</code> tab, select <code>Enable Third-party Vulnerability Analytics</code> slider.</p> <p>In the <code>Global third-party vulnerability detection control</code> section make sure <code>Monitor</code> is selected in the drop-down list.</p> <p>In the <code>Technologies</code> section,  enable all technologies.</p> <p>Select the Save changes button at the bottom left of the screen.</p> <p></p>"},{"location":"getting-started/#get-the-operator-token-and-the-ingest-token-from-the-kubernetes-app","title":"Get the Operator Token and the Ingest Token from the Kubernetes App","text":"<p>Open the <code>Kubernetes</code> App.</p> <p>Select the + Add cluster button.</p> <p></p> <p>Scroll down to the section <code>Install Dynatrace Operator</code>. </p> <p>Select the <code>Generate token</code> button for the <code>Dynatrace Operator</code>. Copy and save it to your Notepad.</p> <p>Select the <code>Generate token</code> button for the <code>Data Ingest Token</code>.  Copy and save it to your Notepad.</p> <p></p> <p>You can close the Kubernetes App, we don't need it, we just needed the tokens.</p>"},{"location":"getting-started/#create-dt-business-event-token","title":"Create DT Business Event Token","text":"<p>Open the <code>Access tokens</code> classic app.</p> <p>Select the <code>Generate new token</code> button.</p> <p></p> <p>In the <code>Token name</code> section provide a name.</p> <p>In the <code>Select scopes from the table below</code> section find and select the checkbox for:</p> <p><pre><code>Ingest bizevents\n</code></pre> Select the <code>Generate token</code> button at the bottom left of the page.</p> <p></p> <p>In the next screen, select the <code>Copy</code> button and save the token to your notepad as we will use this later.</p> <p>Select the <code>Done</code> button.</p> <p></p>"},{"location":"getting-started/#conclusion","title":"Conclusion","text":"<p>We have enabled Dynatrace tenant configurations for the following:</p> <p><pre><code>1. OneAgent Feature for Node.js Business Events\n2. OneAgent Features for OpenTelemetry\n3. Logs ingestion rule [Built-in] Ingest all logs\n4. Limit outbound connections to endpoints\n5. Third-party Vulnerability Analytics\n</code></pre> You should now have 4 pieces of information:</p> <pre><code>1. A DT environment URL (DT_TENANT)\n2. A Dynatrace Operator Token (DT_OPERATOR_TOKEN)\n3. A Data Ingest Token (DT_INGEST_TOKEN)\n4. An API token with permission for Business Events\n</code></pre>"},{"location":"getting-started/#continue","title":"Continue","text":"<p>In the next section, we'll launch our Codespaces instance.</p> <ul> <li>Continue to Codespaces</li> </ul>"},{"location":"snippets/disclaimer/","title":"Disclaimer","text":"<p>Support Policy</p> <p>This is an enablement project created by the Center of Excellence - Enablement Team at Dynatrace.</p> <p>Support is provided via GitHub issues only. The materials provided in this repository are offered \"as-is\" without any warranties, express or implied. Use them at your own risk.</p>"},{"location":"snippets/view-code/","title":"View code","text":"<p>View the Code</p> <p>The code for this repository is hosted on GitHub. Click the \"View Code on GitHub\" link above.</p>"}]}